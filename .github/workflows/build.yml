name: Create Release
on: 
  #- push
  workflow_dispatch:
    inputs:
      releasename:
        description: Release Version
        required: true
jobs:
  flutterbuild:
    runs-on: ubuntu-18.04
    name: Raspberry Pi aarch64 build
    steps:
      - uses: actions/checkout@v2.1.0
        with:
          path: code
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: bullseye

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |            
            apt -qq update >/dev/null
            apt install -y -qq git curl unzip clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev > /dev/null
            git clone --depth 1 https://github.com/flutter/flutter.git >/dev/null 2>/dev/null
            export PATH="$PATH:`pwd`/flutter/bin"            
            which flutter dart
            cd code
            flutter build linux --release
      - uses: vimtor/action-zip@v1
        with:
          files: build/linux/release/bundle
          dest: release.zip
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "release.zip"
          body: ${{github.event.inputs.releasename}}
          tag: ${{github.event.inputs.releasename}}
          commit: "master"          
